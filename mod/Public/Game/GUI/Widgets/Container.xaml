<ls:UIWidget x:Name="ContainerWidget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"

             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
             Height="2160"  Width="3840"
             ls:UIWidget.ContextName="ContainerInventory" d:DataContext="{d:DesignInstance {x:Type ls:DCContainerInventory}, IsDesignTimeCreatable=True}">
    <ls:UIWidget.Resources>
        <KeyTime x:Key="OpenAnimTime">0:0:0.2</KeyTime>

        <System:Double x:Key="CharacterIconHeight">196</System:Double>
        <!--128-->
        <System:Double x:Key="GOIconWidth">128</System:Double>
        <!--128-->
        <System:Double x:Key="ItemIconHeight">128</System:Double>

        <!--overriding these to keep the old sizes since this ui doesn't support cell scaling yet-->
        <!--94-->
        <System:Double x:Key="ScaledNewItemIconSize">94</System:Double>
        <!--96-->
        <System:Double x:Key="ScaledNewItemIconSizeHighlight">96</System:Double>
        <!--104-->
        <System:Double x:Key="ScaledNewSlotSize">104</System:Double>

        <ControlTemplate x:Key="ItemHeader" TargetType="Control">
            <Grid x:Name="holder" d:DataContext="{d:DesignInstance {x:Type ls:VMItem}, IsDesignTimeCreatable=False}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseEnter">
                        <b:InvokeCommandAction Command="{Binding DataContext.HighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    </b:EventTrigger>
                    <b:EventTrigger EventName="MouseLeave">
                        <b:InvokeCommandAction Command="{Binding DataContext.ClearHighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <b:Interaction.Behaviors>
                    <ls:DropOnGenericBehavior DropCommand="{Binding DataContext.DropOnGameObjectCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                </b:Interaction.Behaviors>
                <Image x:Name="TabBG" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_itemTab_active_d.png" Stretch="None" VerticalAlignment="Bottom"/>

                <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Background="{Binding Icon}" VerticalAlignment="Center" Context="{Binding DataContext.ContainerContext,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Width="{StaticResource GOIconWidth}" Height="{StaticResource ItemIconHeight}"/>
                <Image x:Name="TabDropTarget" VerticalAlignment="Center" Margin="0,0,0,6" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_tab_droptarget_d.png" Stretch="None" IsHitTestVisible="False"/>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self} }" Value="True">
                    <Setter TargetName="TabDropTarget" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_tab_droptarget_h.png" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects.Count, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="0">
                    <Setter TargetName="TabDropTarget" Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="TabBG" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_itemTab_active_h.png" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="CharacterHeader" TargetType="Control">
            <Grid x:Name="holder"  d:DataContext="{d:DesignInstance {x:Type ls:Character}, IsDesignTimeCreatable=False}" >
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseEnter">
                        <b:InvokeCommandAction Command="{Binding DataContext.HighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    </b:EventTrigger>
                    <b:EventTrigger EventName="MouseLeave">
                        <b:InvokeCommandAction Command="{Binding DataContext.ClearHighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Background="{Binding Icon}" Width="{StaticResource GOIconWidth}" Height="{StaticResource CharacterIconHeight}" VerticalAlignment="Bottom" Margin="0,0,0,30"  Context="{Binding DataContext.ContainerContext,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                    <TextBlock IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,34,-4" FontSize="{StaticResource SmallFontSize}" FontWeight="Bold" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" Visibility="{Binding Stats.Health.IsValid, Converter={StaticResource BoolToVisibleConverter}}">
                        <Run Text="{Binding Stats.Health.Value, Mode=OneWay}"/><Run
                            Text="{Binding Stats.Health.Max, Mode=OneWay, StringFormat='/{0}'}"/>
                    </TextBlock>
                </ls:LSEntityObject>
                <Image x:Name="TabBG" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_characterTab_active_d.png" Stretch="None" VerticalAlignment="Bottom"/>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="TabBG" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_characterTab_active_h.png" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="WidgetClosing" >
            <b:Interaction.Behaviors>
                <b:ConditionBehavior >
                    <b:ConditionalExpression>
                        <b:ComparisonCondition LeftOperand="{Binding CurrentPlayer.UIData.OpenExtractedInventoryOnContainer}" Operator="Equal" RightOperand="True"/>
                    </b:ConditionalExpression>
                </b:ConditionBehavior>
            </b:Interaction.Behaviors>
            <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseInventoryPanel" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Unloaded">
            <ls:LSPlaySound Sound="UI_HUD_Shared_Close"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid>
        <Border ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}">
            <!--Whole container calls on this margin relative to container     original 0,0,0,240-->
            <ListBox x:Name="MainList" ItemsSource="{Binding CurrentPlayer.ContainerInventoryList}" SelectedItem="{Binding  CurrentPlayer.UIData.CurrentContainer}" Margin="400,50,0,0" Background="{x:Null}" >
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Panel.ZIndex" Value="1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate  TargetType="ListBoxItem">
                                    <ControlTemplate.Resources>
                                        <DataTemplate x:Key="TakeAllContent">
                                            <Grid >
                                                <TextBlock x:Name="txt" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Source='h1cc89290gfa2eg406cg9e5bg75a612b65633', Converter={StaticResource TranslatedStringConverter}}"/>
                                                <Image x:Name="icon" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,70,4" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/ico_takeAll_d.png" Stretch="None"/>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/ico_takeAll_h.png" TargetName="icon"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPressed}" Value="True">
                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/ico_takeAll_d.png" TargetName="icon"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsAvatarContainer}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" TargetName="txt"/>
                                                </DataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" TargetName="icon"/>
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ControlTemplate.Resources>

                                    <Grid x:Name="itemContainer" Tag="">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <noesis:SetFocusAction/>
                                                <b:ChangePropertyAction TargetName="MainList" PropertyName="SelectedItem" Value="{Binding .}" />
                                            </b:EventTrigger>
                                            <b:EventTrigger EventName="Loaded">
                                                <b:InvokeCommandAction Command="{Binding Path=DataContext.DismissNotification, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                                <b:ControlStoryboardAction >
                                                    <b:ControlStoryboardAction.Storyboard>
                                                        <Storyboard FillBehavior="Stop" x:Name="AppearAnimation" >
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="panelHolder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="{Binding WorldBounds.X}" />
                                                                <EasingDoubleKeyFrame KeyTime="{StaticResource OpenAnimTime}" Value="{Binding Path=(b:Interaction.Behaviors)[0].TargetPosition.X,ElementName=panelHolder}">
                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                </EasingDoubleKeyFrame>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="panelHolder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="{Binding WorldBounds.Y}" />
                                                                <EasingDoubleKeyFrame KeyTime="{StaticResource OpenAnimTime}" Value="{Binding Path=(b:Interaction.Behaviors)[0].TargetPosition.Y,ElementName=panelHolder}">
                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                </EasingDoubleKeyFrame>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="panel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.3" />
                                                                <EasingDoubleKeyFrame KeyTime="{StaticResource OpenAnimTime}" Value="1.0">
                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                </EasingDoubleKeyFrame>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="panel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.3" />
                                                                <EasingDoubleKeyFrame KeyTime="{StaticResource OpenAnimTime}" Value="1.0">
                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                </EasingDoubleKeyFrame>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="panelHolder" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.9" />
                                                                <EasingDoubleKeyFrame KeyTime="{StaticResource OpenAnimTime}" Value="1.0">
                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                </EasingDoubleKeyFrame>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"  Storyboard.TargetName="itemContainer">
                                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
                                                                <DiscreteBooleanKeyFrame KeyTime="{StaticResource OpenAnimTime}" Value="True" />
                                                            </BooleanAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </b:ControlStoryboardAction.Storyboard>
                                                </b:ControlStoryboardAction>
                                            </b:EventTrigger>
                                            <b:EventTrigger EventName="Unloaded">
                                                <b:ControlStoryboardAction Storyboard="{Binding ElementName=itemContainer,Path=(b:Interaction.Triggers)[1].Actions[0].Storyboard}" ControlStoryboardOption="Stop" />
                                                <b:InvokeCommandAction Command="{Binding DataContext.PlayCloseSoundCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <Border HorizontalAlignment="Left" VerticalAlignment="Top" x:Name="panelHolder" RenderTransformOrigin="0.0 0.5" >
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform x:Name="PosTransForm" />
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                            <b:Interaction.Behaviors>
                                                <ls:LSMouseDragElementBehavior x:Name="DragBehavior" PositionBounds="{Binding WorldBounds}" Placement="Top" />
                                            </b:Interaction.Behaviors>
                                            <Grid VerticalAlignment="Top" RenderTransformOrigin="0 0" x:Name="panel">
                                                <Grid.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform x:Name="ScaleTransForm" />
                                                    </TransformGroup>
                                                </Grid.RenderTransform>
                                                <!--Main Grid-->
                                                <Grid VerticalAlignment="Top" HorizontalAlignment="Center">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Control x:Name="headerTab" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,-40" Panel.ZIndex="11" Template="{StaticResource ItemHeader}" />
                                                    <ls:LSNineSliceImage Grid.Row="1" IconWidth="480" Slices="48 40 48 100" MaxHeight="2000" VerticalAlignment="Top" VerticalContentAlignment="Top" HorizontalAlignment="Center" Panel.ZIndex="1" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_background.png">
                                                        <!--Minimum container Height - don't forget to change scale icon's position, (342) + 342  original InventoryMinH-->
                                                        <ls:LSNineSliceImage.Resources>
                                                            <System:Double x:Key="InventoryMinH">684</System:Double>
                                                        </ls:LSNineSliceImage.Resources>

                                                        <Grid Name="Inventory" Margin="0,24,0,136"  Background="Transparent" VerticalAlignment="Top" >
                                                            <b:Interaction.Behaviors>
                                                                <ls:CollectionSortBehavior x:Name="InventorySortBehavior" ItemsSource="{Binding LootInventory.Slots}" Comparer="{Binding DataContext.Data.InventoryIndexSortComparer, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                                                            </b:Interaction.Behaviors>
                                                            <b:Interaction.Triggers>
                                                                <b:DataTrigger Binding="{Binding IsKeyboardFocusWithin, ElementName=ContainerListBox}" Value="False">
                                                                    <b:ChangePropertyAction TargetName="ContainerListBox" PropertyName="SelectedIndex" Value="-1" />
                                                                </b:DataTrigger>
                                                                <b:EventTrigger EventName="MouseRightButtonUp" SourceObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                                                    <b:Interaction.Behaviors>
                                                                        <b:ConditionBehavior>
                                                                            <b:ConditionalExpression>
                                                                                <b:ComparisonCondition LeftOperand="{Binding Path=IsMouseOver, ElementName=ContainerListBox}" Operator="Equal" RightOperand="False"/>
                                                                            </b:ConditionalExpression>
                                                                        </b:ConditionBehavior>
                                                                    </b:Interaction.Behaviors>
                                                                    <b:ChangePropertyAction TargetName="ContainerListBox" PropertyName="SelectedIndex" Value="-1" />
                                                                </b:EventTrigger>
                                                            </b:Interaction.Triggers>

                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <ls:LSInputBinding BoundEvent="ActionCancel" EatInput="False" IsEnabled="True" PlayerId="{Binding PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                                                <b:Interaction.Triggers>
                                                                    <b:EventTrigger EventName="LSInputBindingPressed">
                                                                        <b:ChangePropertyAction TargetName="ContainerListBox" PropertyName="SelectedIndex" Value="-1" />
                                                                    </b:EventTrigger>
                                                                </b:Interaction.Triggers>
                                                            </ls:LSInputBinding>

                                                            <!--Sorting options button (we don't need it)-->

                                                            <!--Sorting options button END-->
                                                            <!--Sorting Panel (on when toggled)-->
                                                            <Grid Visibility="{Binding ElementName=SortVisBtn, Path=IsChecked, Converter={StaticResource BoolToVisibleConverter}}" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <ls:LSComboBox x:Name="sortComboBox" Grid.Column="0" VerticalAlignment="Top" SoundID="UI_HUD_Inventory_Sort"
                                                                               ItemsSource="{Binding Path=DataContext.CurrentPlayer.UIData.InventorySortOptions,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                                                               Template="{StaticResource SortComboTemplate}"
                                                                               SelectedItem="{Binding Path=DataContext.ContainerSortOption, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                                                               Text="{Binding Path=DataContext.ContainerSortOption.Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Mode=OneWay}"
                                                                               MaxDropDownHeight="580"
                                                                               AllowRepeatedSelection="True"/>

                                                                <!--Inventory Toggle Button-->
                                                                <ls:LSButton Grid.Column="1" Margin="16,0,36,0" x:Name="PlayerInvToggle" ToolTipService.Placement="Center" ToolTipService.VerticalOffset="-84" Command="{Binding DataContext.CustomEvent,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleCharacterPanel">
                                                                    <ls:LSButton.ToolTip>
                                                                        <ls:LSTooltip Content="{Binding Source='h5018809fg425fg4cf8ga7f7g1b31be233df7' , Converter={StaticResource TranslatedStringConverter}}" />
                                                                    </ls:LSButton.ToolTip>
                                                                    <ls:LSButton.Template>
                                                                        <ControlTemplate TargetType="ls:LSButton">
                                                                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                                                <Grid VerticalAlignment="Center">
                                                                                    <Image x:Name="bg" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_d.png" Stretch="None" HorizontalAlignment="Left"/>
                                                                                    <Image x:Name="chest" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_d.png" Stretch="None"  Margin="2,0,0,0"/>
                                                                                </Grid>
                                                                            </StackPanel>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_h.png" TargetName="bg"/>
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_h.png" TargetName="chest"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_disabled.png" TargetName="bg"/>
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_disabled.png" TargetName="chest"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_p.png" TargetName="bg"/>
                                                                                    <Setter Property="Margin" Value="2,4,0,0" TargetName="chest"/>
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_p.png" TargetName="chest"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>

                                                                    </ls:LSButton.Template>
                                                                </ls:LSButton>

                                                                <!--SortingInventory Toggle Button-->
                                                                <ls:LSButton Grid.Column="2" Margin="96,0,36,0" x:Name="PlayerSortInvToggle" ToolTipService.Placement="Center" ToolTipService.VerticalOffset="-84" Command="{Binding DataContext.CustomEvent,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="OpenSortingInventory">
                                                                    <ls:LSButton.ToolTip>
                                                                        <ls:LSTooltip Content="{Binding Source='h1e3ecf3cg33fbg4a8dg8f9fg2c5c07ec0a3e' , Converter={StaticResource TranslatedStringConverter}}" />
                                                                    </ls:LSButton.ToolTip>
                                                                    <ls:LSButton.Template>
                                                                        <ControlTemplate TargetType="ls:LSButton">
                                                                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                                                <Grid VerticalAlignment="Center">
                                                                                    <Image x:Name="bg" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_d.png" Stretch="None" HorizontalAlignment="Left"/>
                                                                                    <Image x:Name="chest" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/SortingInventory/ico_inventory_d.png" Stretch="None"  Margin="2,0,0,0"/>
                                                                                </Grid>
                                                                            </StackPanel>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_h.png" TargetName="bg"/>
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/SortingInventory/ico_inventory_h.png" TargetName="chest"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_disabled.png" TargetName="bg"/>
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/SortingInventory/ico_inventory_disabled.png" TargetName="chest"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/container_roundBtn_p.png" TargetName="bg"/>
                                                                                    <Setter Property="Margin" Value="2,4,0,0" TargetName="chest"/>
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/SortingInventory/ico_inventory_p.png" TargetName="chest"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>

                                                                    </ls:LSButton.Template>
                                                                </ls:LSButton>
                                                            </Grid>

                                                            <!--Scale system only height
                                                                ____________
                                                            Scale system uses the panelSizer to define the position with Margin and alignments and the max scroll w  MaxHeight
                                                            The -60 on the bottom margin is two fold first to let the scaler be below the ContainerListBox bottom and also to still leave a little extra space for the scaler to goto so it can actually do the scaling
                                                            If the space here is too low , the scaling will drag behind, if it's too high the scaler will go under the background panel when it reaches the bottom
                                                            After releasing the drag the AdjustSize wil resize to a even amount of cells using the dummy's Height
                                                            Inventory uses the transform Y as height
                                                            The margin of the scaler img sets the minimum height -> Y == 0
                                                            -->
                                                            <Grid x:Name="dummyholder" MaxHeight="1">
                                                                <!--This dummy is only here to have a depedencyproperty to use a converter for the resize on scaler release to an even amount of cells-->
                                                                <Rectangle x:Name="dummy1" Height="20" Width="40"  />
                                                                <Rectangle x:Name="dummy2" Height="20" Width="1"  />
                                                            </Grid>
                                                            <!--Fixing max height causes scale button leaving panel (minus one row tho)-->
                                                            <Border Grid.Column="2" Grid.Row="2" x:Name="PanelSizer" Width="{Binding ElementName=SizerThumb, Path=Width}" HorizontalAlignment="Right" MaxHeight="1120" VerticalAlignment="Stretch" ClipToBounds="False" Panel.ZIndex="10" Margin="-32,14,16,-100" >

                                                                <b:Interaction.Triggers>
                                                                    <b:DataTrigger Binding="{Binding Path=(b:Interaction.Behaviors)[0].IsDragging, ElementName=SizerThumb}" Value="False">
                                                                        <b:ChangePropertyAction PropertyName="Height" TargetName="dummy1" Value="{Binding Path=(UIElement.RenderTransform).(TranslateTransform.Y), ElementName=SizerThumb}"/>
                                                                        <b:ChangePropertyAction PropertyName="Height" TargetName="dummy2" Value="{Binding Path=(UIElement.RenderTransform).(TranslateTransform.Y), ElementName=SizerThumb,Converter={StaticResource RoundConverter} , ConverterParameter=114}"/>
                                                                        <b:ChangePropertyAction PropertyName="StopDragY" TargetObject="{Binding Path=(b:Interaction.Behaviors)[0], ElementName=SizerThumb}" Value="{Binding ElementName=dummy2, Path=Height}"/>
                                                                        <!-- disabled this animation for now , looking w noesis to solve the binding issue-->
                                                                        <b:ControlStoryboardAction  >
                                                                            <b:ControlStoryboardAction.Storyboard>
                                                                                <Storyboard FillBehavior="Stop">
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="StopDragY" Storyboard.Target="{Binding Path=(b:Interaction.Behaviors)[0], ElementName=SizerThumb}">
                                                                                        <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="{Binding Height ,ElementName=dummy1}" />
                                                                                        <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="{Binding Height ,ElementName=dummy2}" />
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </b:ControlStoryboardAction.Storyboard>
                                                                        </b:ControlStoryboardAction>
                                                                    </b:DataTrigger>
                                                                </b:Interaction.Triggers>
                                                                <Control Panel.ZIndex="200" x:Name="SizerThumb" VerticalAlignment="Top" HorizontalAlignment="Right"  >
                                                                    <!--keep the LSMouseDragElementBehavior as the first behavior, it's used relatively in bindings Tag="{Binding Path=(b:Interaction.Behaviors)[0].StopDragY, ElementName=SizerThumb , Mode=OneWayToSource}"-->
                                                                    <b:Interaction.Behaviors>
                                                                        <ls:LSMouseDragElementBehavior x:Name="ScaleBehavior"/>
                                                                    </b:Interaction.Behaviors>
                                                                    <b:Interaction.Triggers>
                                                                        <b:EventTrigger EventName="MouseEnter">
                                                                            <b:InvokeCommandAction Command="{Binding DataContext.SetCursorCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="Resize"/>
                                                                        </b:EventTrigger>
                                                                        <b:EventTrigger EventName="MouseLeave">
                                                                            <b:InvokeCommandAction Command="{Binding DataContext.SetCursorCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter=""/>
                                                                        </b:EventTrigger>
                                                                    </b:Interaction.Triggers>
                                                                    <Control.Template>
                                                                        <ControlTemplate TargetType="Control">
                                                                            <!--294 (3 * slotH + Spacing) + 36 (scaler H) - alpha in image 6  for Margin top 352-->
                                                                            <!--added 342 to margin to fin increased grid-->
                                                                            <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/ico_scaler_d.png" Stretch="None" Margin="0,694,0,0"/>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/ico_scaler_h.png" TargetName="img"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Container/ico_scaler_disabled.png" TargetName="img"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Control.Template>
                                                                </Control>
                                                            </Border>
                                                            <!--Container Slots original margin 54,14,0,0-->
                                                            <ListBox x:Name="ContainerListBox" ItemsSource="{Binding Path=SortedItems,ElementName=InventorySortBehavior}" SelectionMode="Extended" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="2" MaxHeight="1140" Margin="24,14,0,0" MinWidth="848" Background="Transparent" MinHeight="{StaticResource InventoryMinH}" Height="{Binding Path=(UIElement.RenderTransform).(TranslateTransform.Y), ElementName=SizerThumb, Converter={StaticResource AddConverter}, ConverterParameter={StaticResource InventoryMinH}}" ls:MultiSelect.IsEnabled="False" ItemTemplate="{StaticResource Template.ContainerCell}" ItemContainerStyle="{StaticResource InvContainerListBoxItemStyle}" >
                                                                <b:Interaction.Behaviors>
                                                                    <ls:DragGenericBehavior StartDragCommand="{Binding DataContext.DragInventoryCommand , RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                                                </b:Interaction.Behaviors>
                                                                <ListBox.Template>
                                                                    <ControlTemplate TargetType="ListBox">
                                                                        <Grid>
                                                                            <Grid MaxHeight="1" MaxWidth="1">
                                                                                <Rectangle x:Name="dummyScroller" Height="1" />
                                                                            </Grid>
                                                                            <ls:LSScrollViewer x:Name="CLBScrollviewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Padding="0,0,24,0" Background="{x:Null}"
                                                                                               VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.VirtualizationMode="Recycling">
                                                                                <ls:LSScrollViewer.Resources>
                                                                                    <Style TargetType="ScrollBar" BasedOn="{StaticResource GoldScrollBar}"  />
                                                                                </ls:LSScrollViewer.Resources>
                                                                                <b:Interaction.Behaviors>
                                                                                    <ls:DragScrollingBehavior />
                                                                                </b:Interaction.Behaviors>
                                                                                <b:Interaction.Triggers>
                                                                                    <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                                                        <b:ChangePropertyAction PropertyName="Height" TargetName="dummyScroller" Value="{Binding Path=VerticalOffset, ElementName=CLBScrollviewer,Converter={StaticResource RoundConverter} , ConverterParameter=114}"/>
                                                                                        <b:ControlStoryboardAction>
                                                                                            <b:ControlStoryboardAction.Storyboard>
                                                                                                <Storyboard >
                                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CLBScrollviewer" Storyboard.TargetProperty="VerticalScrollOffset" >
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{Binding Path=VerticalOffset, ElementName=CLBScrollviewer}"/>
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{Binding Path=Height, ElementName=dummyScroller}"/>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </b:ControlStoryboardAction.Storyboard>
                                                                                        </b:ControlStoryboardAction>
                                                                                    </b:EventTrigger>
                                                                                </b:Interaction.Triggers>
                                                                                <ls:LSScrollViewer.Template>
                                                                                    <ControlTemplate TargetType="ls:LSScrollViewer">
                                                                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource Corner.Border0}">
                                                                                            <Grid>
                                                                                                <Grid.RowDefinitions>
                                                                                                    <RowDefinition Height="*"/>
                                                                                                    <RowDefinition Height="Auto"/>
                                                                                                </Grid.RowDefinitions>
                                                                                                <Grid.ColumnDefinitions>
                                                                                                    <ColumnDefinition Width="*"/>
                                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                                </Grid.ColumnDefinitions>

                                                                                                <ScrollContentPresenter Grid.RowSpan="2" Grid.ColumnSpan="2" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                                                                                                <Rectangle x:Name="Corner" Grid.Row="1" Grid.Column="1" Fill="{DynamicResource Brush.Track.Normal}" IsEnabled="False" Opacity="0"/>
                                                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" MaxHeight="{TemplateBinding MinHeight}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}"/>
                                                                                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" Orientation="Vertical" MaxWidth="{TemplateBinding MinWidth}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}"/>
                                                                                            </Grid>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_HorizontalScrollBar">
                                                                                                <Setter Property="IsEnabled" Value="True" TargetName="Corner"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_VerticalScrollBar">
                                                                                                <Setter Property="IsEnabled" Value="True" TargetName="Corner"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </ls:LSScrollViewer.Template>
                                                                                <ItemsPresenter  />
                                                                            </ls:LSScrollViewer>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </ListBox.Template>
                                                                <ListBox.ItemsPanel>

                                                                    <!--Container Grid original size 5x3 568 -->
                                                                    <ItemsPanelTemplate>
                                                                        <ls:LSGrid x:Name="ContainerGrid" Columns="7" Rows="6" Width="788" ContainerData="{Binding LootInventory}"  noesis:Element.PPAAMode="Disabled"
                                                                                   SnapsToDevicePixels="True" ScrollAmount="114"  CellWidth="{DynamicResource ScaledNewSlotSize}" CellHeight="{DynamicResource ScaledNewSlotSize}"
                                                                                   VerticalSpacing="{DynamicResource ContInvSpacing}" DisableScrolling="True"
                                                                                   HorizontalSpacing="{DynamicResource ContInvSpacing}" ActionUpEvent="UIUp" ActionDownEvent="UIDown" ActionRightEvent="UIRight"
                                                                                   ActionLeftEvent="UILeft" AllowDrop="True" Background="{StaticResource ContInventoryCell2x2Brush}">
                                                                            <b:Interaction.Behaviors>
                                                                                <ls:DropOnInventoryGridBehavior DropCommand="{Binding DataContext.DropOnInventorySlotCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                                                            </b:Interaction.Behaviors>
                                                                        </ls:LSGrid>
                                                                    </ItemsPanelTemplate>

                                                                </ListBox.ItemsPanel>
                                                            </ListBox>
                                                        </Grid>
                                                    </ls:LSNineSliceImage>
                                                    <!--Close Button-->
                                                    <ls:LSButton Style="{StaticResource PopUpCloseButton}" x:Name="CloseBtn" Grid.Row="1" Panel.ZIndex="20" Command="{Binding DataContext.CloseContainerCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding ElementName=itemContainer,Path=DataContext}" VerticalAlignment="Top" HorizontalAlignment="Right"  Margin="0,30,-16,0"/>
                                                </Grid>
                                                <!--Take All Button-->
                                                <ls:LSButton x:Name="ButtonTakeAll" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,44" Panel.ZIndex="8" BoundEvent="UITakeAll"
                                                             Command="{Binding DataContext.TakeAllAndCloseCommand.ActionCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                                             Style="{StaticResource BrownButtonStyle}" Visibility="{Binding IsAvatarContainer, Converter={StaticResource BoolToHiddenConverter}}"
                                                             HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ContentTemplate="{StaticResource TakeAllContent}"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItems.Count,ElementName=ContainerListBox,Converter={StaticResource GreaterThanConverter},ConverterParameter=1}" Value="True">
                                            <Setter TargetName="ContainerListBox" Property="ls:MultiSelect.IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Character">
                                            <Setter TargetName="headerTab" Property="Template" Value="{StaticResource CharacterHeader}" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Border>
    </Grid>

</ls:UIWidget>